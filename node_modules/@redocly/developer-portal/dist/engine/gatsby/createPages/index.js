const{templatesPaths}=require("./templates"),{PAGE_TYPES}=require("../../constants");module.exports=({graphql:a,actions:b,reporter:c})=>(`production`!==process.env.NODE_ENV&&b.createPage({path:"/dev-idp-login",component:templatesPaths.devIdpLogin,context:{}}),a(`
    {
      allContentItem {
        edges {
          node {
            id
            type
            pageId
            link
            baseLink
            sourcePath
            data {
              title
              description
              image
              keywords
              showPrevButton
              showNextButton
              customTemplate
              customDataString
              lang
              matchPath
              apiVersions {
                definitionId
                id
                title
                isDefault
              }
              isDefaultApiVersion
              apiVersionId
              redirectFrom
            }
          }
        }
      }
      allSidebar {
        nodes {
          pagesIds
          name
        }
      }
    }
  `).then(({data:a,errors:d})=>{if(d)throw d[0];const e=a.allContentItem.edges.map(({node:a})=>a),f=a.allSidebar.nodes;createContentPages(e,f,{actions:b,reporter:c})}));function createContentPages(a,b,{actions:c,reporter:d}){const{createPage:e,createRedirect:f}=c;for(let g of a){const a=b.find(a=>null!=a.pagesIds.find(a=>g.pageId.startsWith(a.replace(/\/?\*$/,"")))),c=g.data.customDataString?JSON.parse(g.data.customDataString):{},h={id:g.id,pageId:g.pageId,pageBaseUrl:g.baseLink,title:g.data.title,description:g.data.description,image:c.image,keywords:c.keywords,type:g.type,data:c,link:g.link,sidebarName:a&&a.name||"",isLanding:"/"===g.link,showPrevButton:g.data.showPrevButton,showNextButton:g.data.showNextButton,apiVersions:g.data.apiVersions,apiVersionId:g.data.apiVersionId,isDefaultApiVersion:g.data.isDefaultApiVersion};switch(g.data&&g.data.redirectFrom&&g.data.redirectFrom.forEach(a=>{a&&f({fromPath:a,toPath:g.link,isPermanent:!0,redirectInBrowser:!0})}),g.type){case PAGE_TYPES.markdown:e({path:g.link,component:templatesPaths.simpleMarkdown,context:h,matchPath:g.data&&g.data.matchPath});break;case PAGE_TYPES.mdx:e({path:g.link,component:g.sourcePath,context:h,matchPath:g.data&&g.data.matchPath});break;case PAGE_TYPES.referenceDocsPage:case PAGE_TYPES.referenceDocsOverview:e({path:g.link,component:templatesPaths.redocOperation,context:h});break;case PAGE_TYPES.dataTemplate:e({path:g.link,component:g.data.customTemplate,context:h,matchPath:g.data&&g.data.matchPath});break;case PAGE_TYPES.referenceDocsContainerPage:break;default:d.panicOnBuild(`Unknown page type for "${g.sourcePath}"`);}}}