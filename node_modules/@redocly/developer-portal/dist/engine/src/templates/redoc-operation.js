import*as React from"react";import{createGlobalStyle,MarkdownRenderer,mediaCSS,ProProviders,ProStore,RedoclyReferenceDocs,Section,ZERO_BREAKPOINT}from"@redocly/reference-docs";import{navigate}from"gatsby";import{configure}from"mobx";import{observer}from"mobx-react";import{graphql as gql}from"gatsby";import ApiReferenceInfo from"../components/UserComponents/ApiReferenceInfo";import{withTheme}from"../styled-components";import{PageHeader}from"../components/PageHeader/PageHeader";import{PAGE_TYPES,REDOC_OVERVIEW_ITEM_ID}from"../../constants";import{usePageData,usePathPrefix}from"../ui/utils";import{getNavbarElement}from"../utils";import"../fragments";import{getUserId}from"../ui/auth/utils";import{useIdpLoginPath}from"../components/RedirectToLogin";import{FakeControlsWrap}from"../components/styled";const DEFAULT_OAUTH2_REDIRECT_PAGE="/_auth/oauth2-redirect.html";configure({isolateGlobalState:!0,useProxies:"ifavailable"});const oldRender=MarkdownRenderer.prototype.renderMd;function getHooks(){let a={};try{a=require("Content/_override/ReferenceDocsHooks")}catch(a){}return a}function RedocPage(a){const{type:b,data:c,link:d}=a.data.contentItem,{referenceDocsStoreJson:e}=usePageData(),f=a.data.contentItem.data.redocItemId,[g,h]=React.useState(),i=React.useMemo(()=>{if(!e)return null;e.options={...(e.options||{}),...(c.settings||{})},e.options.disableSearch=!0,e.options.showNextButton=!1,e.options.theme=a.theme;const{events:b,requestInterceptor:g,...h}=getHooks();e.options.hooks=h,e.options.events=b,e.options.requestInterceptor=g;const i=usePathPrefix();if(e.options.routingBasePath=a.pageContext.pageBaseUrl||void 0,e.options.oAuth2RedirectURI="undefined"==typeof window?null:`${window.location.origin}${i}${DEFAULT_OAUTH2_REDIRECT_PAGE}`,e.options.disableSidebar=!0,e.options.pagination=e.options.pagination||"item",e.options.disablePaginationLoadingAnimation=null==e.options.disablePaginationLoadingAnimation?"section"!==e.options.pagination:e.options.disablePaginationLoadingAnimation,e.options.skipBundleAndConvert=!0,e.options.unauthorizedTryIt&&!getUserId()){const b=i+a.data.contentItem.link;let c=e.options.unauthorizedTryIt.link;c=c&&c.startsWith("/")?i+c:c;const d=c||useIdpLoginPath();e.options.unstable_tryItButtonOverride={label:e.options.unauthorizedTryIt.label,onClick:()=>{navigate(d+"?redirect_to="+encodeURIComponent(b))}}}e.options.linkForId=function(a){if(!a)return"";if(a.startsWith("section/Authentication/")){if(!c.redocHasSecurityDefinitions)return"";if("none"!==e.options.pagination)return c.redocInfoPageLink?i+c.redocInfoPageLink+"#"+a:""}return i+d+"#"+a},e.options.generateDeepLink=(a,b)=>{switch(e.options.pagination){case"item":return"#!"+a;case"section":case"none":return"#"+joinWithSeparator(b.split("#")[1]||"",a,e.options.deepLinkPrefix||"!");}return null},e.options.onDeepLinkClick=a=>{navigate(a),"item"===e.options.pagination&&j.menu.history.replaceForField(f+a.substr(1))},e.options.scrollYOffset=()=>{const a=getNavbarElement();return a&&a.getBoundingClientRect().bottom||74};const j=ProStore.fromJS(e),k=a.pageContext.pageBaseUrl||"";MarkdownRenderer.prototype.renderMd=function(a,b){const c=oldRender.apply(this,[a,b]);return c.replace(/<a href="#(section|operation|tag)\/([^\/"]*)(?:\/([^"]*))?"/g,(a,b,c,d)=>`<a href="${k}/${b}/${c}${d?"#"+d:""}"`)},Object.defineProperty(j.menu.history,"replace",{get:()=>a=>{a&&navigate(j.menu.history.linkForId(a))},configurable:!0});const l=j.menu.flatItems.find(a=>a.id===f);return j.menu.activate(l,!1,!1,!1),j},[e]);if(React.useEffect(()=>{switch(i?.options.pagination){case"item":h(window.location.hash.substring(1));break;case"section":case"none":h(window.location.hash.split(i.options.deepLinkPrefix)[1]);}},[i]),React.useLayoutEffect(()=>{if(!i)return;const a=window.location.hash.substring(1).split(i.options.deepLinkPrefix)[0],b=i.menu.flatItems.find(b=>b.id===a)||i.menu.activeItem,c=g?joinWithSeparator(b?.id||"",g,i.options.deepLinkPrefix):void 0;c&&i.menu.history.replaceForField(c||""),i.menu.activateAndScroll(b,!1,void 0,c)},[g,i]),!i)return null;React.useEffect(()=>{const a=i.menu.flatItems.find(a=>a.id===f);i.menu.activate(a,!1,!1,!1)},[f]);let j;return j=b===PAGE_TYPES.referenceDocsOverview&&"none"!==e.options.pagination?React.createElement(ApiReferenceInfo,{store:i,data:c}):React.createElement(RedoclyReferenceDocs,{store:i,_forceRenderInfo:f===REDOC_OVERVIEW_ITEM_ID&&c.redocHasInfoPage}),React.createElement(React.Fragment,null,React.createElement(PageHeader,Object.assign({},a.pageContext)),React.createElement(ProProviders,{store:i},j),React.createElement(CssFixes,{withLayoutButtons:i.options.showRightPanelToggle||i.options.showChangeLayoutButton}))}const CssFixes=createGlobalStyle`
  // TODO: !!!
  ${Section}:last-child {
    ${mediaCSS({minHeight:{[ZERO_BREAKPOINT]:"",medium:0}})}
  }

  ${FakeControlsWrap} {
    ${({withLayoutButtons:a})=>a?"":"display: none;"};
  }
`;export default withTheme(observer(RedocPage));export const pageQuery=gql`
  query RedocOpQuery($pageId: String!) {
    contentItem(pageId: { eq: $pageId }) {
      type
      link
      data {
        redocStoreStr
        redocHasSecurityDefinitions
        redocInfoPageLink
        redocItemId
        redocHasInfoPage
        settings
        title
        requestLogin
        lastModified
      }
    }
  }
`;function joinWithSeparator(a="",b="",c="/"){return a.endsWith(c)&&(a=a.slice(0,-c.length)),b.startsWith(c)&&(b=b.slice(c.length)),a&&b?a+c+b:a+b}