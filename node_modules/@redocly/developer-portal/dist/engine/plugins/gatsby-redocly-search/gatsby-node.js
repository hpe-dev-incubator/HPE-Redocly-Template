const path=require("path"),fs=require("fs"),cheerio=require("cheerio"),elasticlunr=require("elasticlunr"),shortid=require("shortid"),{contentDigest}=require("../gatsby-source-redocly-filesystem/utils"),{ProStore}=require("@redocly/reference-docs"),{DeepSearchIndexer}=require("./DeepSearchIndexer"),{PAGE_TYPES}=require("../../constants");async function readFileAsync(a,b){return new Promise(function(c,d){fs.readFile(a,b,function(a,b){a?d(a):c(b)})})}function initSearchIndex(){elasticlunr.tokenizer.setSeperator(/[\s\-.\/]+/g);const a=elasticlunr();return a.setRef("id"),a.addField("content"),a}async function saveSearchIndex(a,b){let c;try{c=JSON.stringify(a.toJSON())}catch(a){if("RangeError"===a.name)throw new Error("Error creating search index: some of your content files probably contain very long non-breaking lines. Please, try to add spaces or line breaks or contact team@redoc.ly");throw a}return new Promise((a,d)=>{fs.writeFile(path.resolve(b+path.sep+"search-index.json"),c,"utf8",b=>b?(console.log("Search index generation failed",b),void d(b)):void(console.log("Search index generated and saved successfully"),a()))})}function parseHeadings(a,b,c){let d,e;const f=a("nav a").toArray().map(b=>({href:a(b).attr("href"),title:a(b).text()}));if(a("aside").length){const g=a("aside a").toArray().map(b=>({href:a(b).attr("href"),title:a(b).find("> div > span").text(),element:b}));for(let a of f)if(g.find(b=>b.href===a.href)){d=a.title;break}const h=g.find(a=>a.href===b);if(e=h&&h.title,e===c){const b=a(h.element).closest("ul").parent().prev().children().first().text();b&&(e=b)}}else{const a=f.find(a=>a.href===b);d=a&&a.title}return{group:d,side:e}}exports.onPostBuild=async({graphql:a},b,c)=>{const{publicDir:d}=b,e={},f=await a(`
    {
      allContentItem(filter: { data: { excludeFromSearch: { ne: true } } }) {
        edges {
          node {
            id
            link
            data {
              title
              redocStoreStr
              redocItemId
              redocPagination
              lastModified
            }
            type
          }
        }
      }
    }
  `),g=initSearchIndex(),h=new DeepSearchIndexer({});return await Promise.all(f.data.allContentItem.edges.map(async({node:{link:a,type:b,data:{title:c,redocStoreStr:f,redocItemId:i,redocPagination:j}}})=>{function k(b){g.addDoc({id:a+"#"+b.id+shortid.generate(),link:a+"#"+b.id,headings:[b.name].filter(Boolean),content:b.name+"\n"+b.description,meta:{}})}function l(b){g.addDoc({id:a+"#"+b.id+shortid.generate(),link:a,headings:[b.name].filter(Boolean),content:b.name+"\n"+(b.description||"")})}function m(b,c){h.indexOperation(b,(d,e,f)=>{g.addDoc({id:a+"#"+b.id+shortid.generate(),link:"item"===c?a:a+"#"+b.id,headings:[b.name].filter(Boolean),content:d+"\n"+e,httpVerb:b.httpVerb,meta:{place:f.place,path:f.path}})})}if(b===PAGE_TYPES.referenceDocsContainerPage)return;if(f){const d=contentDigest(f);if(!e[d]){const a=JSON.parse(f);a.options.disableSearch=!0,a.options.showNextButton=!1,e[d]=ProStore.fromJS(a)}const h=e[d];if(b===PAGE_TYPES.referenceDocsOverview){g.addDoc({id:a+"#"+shortid.generate(),link:a,headings:[c].filter(Boolean),content:c+"\n"+(h.definition||h.spec).info.description,meta:{}});for(const a of h.menu.flatItems){if("section"!==a.type&&"none"!==j)break;"tag"===a.type?l(a):"operation"===a.type?m(a,"none"):"section"===a.type&&k(a)}return}let n=[];if(b===PAGE_TYPES.referenceDocsPage&&h.menu.flatItems.length){const a=h.menu.flatItems.find(a=>a.id===i);"tag"===a.type?"section"===j?n.push(a,...a.items):"item"===j&&n.push(a,...a.items.filter(a=>"section"===a.type)):"operation"===a.type&&n.push(a)}else"operation"===redocItem.type&&n.push(redocItem);for(const a of n)"tag"===a.type&&a.description?l(a):"operation"===a.type?m(a,j):"section"===a.type&&k(a);return}let n=await readFileAsync(path.resolve(d+path.sep+a+path.sep+"index.html"),"utf8"),o=cheerio.load(n);o("article > h1, article > h2,article > h3,article > h4, article > p, article > ul, article > div, article > ol").each((b,d)=>{const e=o(d)[0].tagName,f="h1"===e||"h2"===e||"h3"===e||"h4"===e?o(d):o(d).prevAll("h1[id],h2[id],h3[id],h4[id]").first(),h={id:shortid.generate(),link:f.length?`${a}#${o(f).attr("id")}`:a,headings:[(c||a)+(f.length?` > ${f.text()}`:"")].filter(Boolean),content:o(d).text()};g.addDoc(h)})})),await saveSearchIndex(g,d),c(),g};