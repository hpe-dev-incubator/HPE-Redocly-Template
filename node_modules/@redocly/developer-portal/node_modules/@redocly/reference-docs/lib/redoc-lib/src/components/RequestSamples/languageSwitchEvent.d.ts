import { AnalyticsEvent, AnalyticsEventType, CodeSamplesLanguageSwitchedEvent, PanelToggleEvent } from '../../../../services/store-types';
import { OperationModel, Sample } from '../../services';
export declare function createTrackingEvent<T extends AnalyticsEvent>(eventType: AnalyticsEventType): (payload: Pick<T, Exclude<keyof T, "eventType">>) => T;
export interface LanguageSwitchProps {
    operation: OperationModel;
    sample: Sample;
}
export declare const languageSwitchEvent: (payload: Pick<CodeSamplesLanguageSwitchedEvent, "label" | "lang" | "resource" | "action" | "operationId" | "exampleId" | "operationPath" | "operationHttpVerb" | "operationSummary">) => CodeSamplesLanguageSwitchedEvent;
export declare const panelToggleEvent: (payload: Pick<PanelToggleEvent, "resource" | "action" | "state" | "operationId" | "panelType" | "operationPath" | "operationHttpVerb" | "operationSummary">) => PanelToggleEvent;
export declare const createLanguageSwitchEvent: ({ operation, sample }: LanguageSwitchProps) => CodeSamplesLanguageSwitchedEvent;
export interface PanelToggleProps {
    operation: OperationModel;
    isExpanded: boolean;
    panelType: PanelToggleEvent['panelType'];
}
export declare const creatPanelToggleEvent: ({ operation, isExpanded, panelType }: PanelToggleProps) => PanelToggleEvent;
