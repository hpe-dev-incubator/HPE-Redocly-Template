import { ContentItemModel, SpecStore, GroupModel, MenuItemGroupType, IMenuItem, OpenAPIParser, ApiInfoModel, SecuritySchemesModel, OpenAPIExternalDocumentation, OpenAPIDefinition } from '../redoc-lib';
import { RedocProNormalizedOptions } from './ProStore';
export declare class SpecGroupModel implements IMenuItem {
    id: string;
    absoluteIdx?: number;
    name: string;
    description?: string;
    type: MenuItemGroupType;
    items: ContentItemModel[];
    parent?: GroupModel;
    externalDocs?: OpenAPIExternalDocumentation;
    active: boolean;
    expanded: boolean;
    depth: number;
    level: number;
    constructor(id: string, items: ContentItemModel[], name?: string, depth?: number);
    activate(): void;
    expand(): void;
    collapse(): void;
    deactivate(): void;
}
export declare class SpecItemModel implements IMenuItem {
    id: string;
    absoluteIdx?: number;
    name: string;
    description?: string;
    type: MenuItemGroupType;
    items: ContentItemModel[];
    parent?: GroupModel;
    externalDocs?: OpenAPIExternalDocumentation;
    active: boolean;
    expanded: boolean;
    depth: number;
    level: number;
    constructor(id: string, items: ContentItemModel[], name?: string, depth?: number);
    activate(): void;
    expand(): void;
    collapse(): void;
    deactivate(): void;
}
export interface SpecVersions {
    versions?: Array<{
        id: string;
        title: string;
        url?: string;
        spec?: OpenAPIDefinition;
    }>;
}
export interface SpecInfo {
    id?: string;
    title?: string;
    definition?: OpenAPIDefinition;
    url?: string;
    items?: SpecInfo[];
}
export declare type SpecsInfo = SpecInfo[] | SpecVersions;
export declare class MultipleSpecsStore {
    config: SpecInfo[];
    options: RedocProNormalizedOptions;
    specs: SpecStore[];
    contentItems: Array<ContentItemModel & {
        specId?: string;
    }>;
    info: ApiInfoModel;
    externalDocs?: OpenAPIExternalDocumentation;
    securitySchemes: SecuritySchemesModel;
    constructor(config: SpecInfo[], options: RedocProNormalizedOptions);
    private addSpec;
    get parser(): OpenAPIParser;
    toJS(): SpecInfo[];
}
