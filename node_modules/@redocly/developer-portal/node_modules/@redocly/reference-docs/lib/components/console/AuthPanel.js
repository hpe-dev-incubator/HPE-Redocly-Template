"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tslib_1=require("tslib"),React=tslib_1.__importStar(require("react")),redoc_lib_1=require("../../redoc-lib"),utils_1=require("../../utils"),OAuth2TokenInput_1=tslib_1.__importDefault(require("./OAuth2TokenInput")),OAuth2Flow_1=require("./OAuth2Flow"),OpenIDConnect_1=require("./OpenIDConnect"),TextField_1=require("../common/TextField"),form_1=require("../common/form"),Labels_1=require("../../redoc-lib/src/services/Labels");function requiredValidator(e){if(!e)return"Field is required"}exports.requiredValidator=requiredValidator;var getCookie=function(e){var t=document.cookie.match("\\b"+e+"=([^;]*)\\b");return t?t[1]:void 0};function fromCookie(e){if("cookie"===e.in)return getCookie(e.name)}var AuthPanel=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return Object.defineProperty(t,"state",{enumerable:!0,configurable:!0,writable:!0,value:{activeScheme:0}}),Object.defineProperty(t,"handleSchemeChange",{enumerable:!0,configurable:!0,writable:!0,value:function(e){t.setState({activeScheme:e.idx}),utils_1.toStorage("securityRequirementName",e.value)}}),t}return tslib_1.__extends(t,e),Object.defineProperty(t,"getDerivedStateFromProps",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var t=e.operation.security.map((function(e){return e.schemes.map((function(e){return e.id})).join(" and ")})),r=utils_1.fromStorage("securityRequirementName"),a=t.findIndex((function(e){return e===r}));return{activeScheme:a<0?0:a}}}),Object.defineProperty(t.prototype,"render",{enumerable:!1,configurable:!0,writable:!0,value:function(){var e=this,t=this.state.activeScheme,r=this.props.operation.security,a=r.map((function(e){return e.schemes.map((function(e){return e.id})).join(" and ")})).map((function(e,t){return{value:e,idx:t}}));return 0===a.length?null:React.createElement(React.Fragment,null,React.createElement(form_1.FormWrapper,null,a.length>1&&React.createElement(form_1.FormControl,null,React.createElement(redoc_lib_1.Dropdown,{variant:"dark",fullWidth:!0,prefix:"Security scheme: ",options:a,value:a[t].value,onChange:this.handleSchemeChange}))||null,r[t].schemes.map((function(t){var r,a,l,o=t.id;if("apiKey"===t.type){var i=utils_1.getSecurityDetailsOptions(o,""),n={field:"auth."+o,fullWidth:!0,initialValue:fromCookie(t)||utils_1.fromStorage("auth."+o),initValue:fromCookie(t)||utils_1.fromStorage("auth."+o),validate:requiredValidator,validateOnBlur:!0,validateOnChange:!0};return React.createElement(form_1.FormControl,{key:o},React.createElement(form_1.FormLabel,null," ",t.name,": "),i?React.createElement(TextField_1.FormDropdown,tslib_1.__assign({},n,{options:i})):React.createElement(TextField_1.FormTextField,tslib_1.__assign({},n,{type:"password"})))}if("http"===t.type){if("basic"===t.scheme){var u=utils_1.getSecurityDetailsOptions(o,"username");n={field:"auth."+o+".username",fullWidth:!0,initialValue:utils_1.fromStorage("auth."+o+".username"),initValue:utils_1.fromStorage("auth."+o+".username"),validate:requiredValidator,validateOnBlur:!0,validateOnChange:!0};return React.createElement(React.Fragment,{key:o},React.createElement(form_1.FormControl,null,React.createElement(form_1.FormLabel,null," ",Labels_1.l("tryItAuthBasicUsername"),": "),u?React.createElement(TextField_1.FormDropdown,tslib_1.__assign({},n,{options:u})):React.createElement(TextField_1.FormTextField,tslib_1.__assign({},n))),React.createElement(form_1.FormControl,null,React.createElement(form_1.FormLabel,null," ",Labels_1.l("tryItAuthBasicPassword"),": "),React.createElement(TextField_1.FormTextField,{type:"password",fullWidth:!0,field:"auth."+o+".password",validate:requiredValidator,initialValue:utils_1.fromStorage("auth."+o+".password"),validateOnBlur:!0,validateOnChange:!0})))}if("bearer"===t.scheme){var s=utils_1.getSecurityDetailsOptions(o,"");n={field:"auth."+o+".username",fullWidth:!0,initialValue:utils_1.fromStorage("auth."+o),initValue:utils_1.fromStorage("auth."+o),validate:requiredValidator,validateOnBlur:!0,validateOnChange:!0};return React.createElement(React.Fragment,{key:o},React.createElement(form_1.FormControl,null,React.createElement(form_1.FormLabel,null," Bearer Token: "),s?React.createElement(TextField_1.FormDropdown,tslib_1.__assign({},n,{options:s})):React.createElement(TextField_1.FormTextField,tslib_1.__assign({},n,{type:"password",placeholder:"(without 'Bearer')"}))))}}else{if("oauth2"===t.type&&t.flows&&t.flows.clientCredentials)return React.createElement(OAuth2TokenInput_1.default,{key:o,flow:t.flows.clientCredentials,server:e.props.activeServer,authCorsProxyUrl:e.props.authCorsProxyUrl,id:o,form:e.props.form,formApi:e.props.formApi,clientId:t.flows.clientCredentials["x-defaultClientId"]||t["x-defaultClientId"]});if("oauth2"===t.type&&t.flows&&t.flows.implicit)return React.createElement(OAuth2Flow_1.OAuth2Flow,{key:o,authorizationUrl:t.flows.implicit.authorizationUrl,authCorsProxyUrl:e.props.authCorsProxyUrl,scopes:Object.keys((null===(a=null===(r=null==t?void 0:t.flows)||void 0===r?void 0:r.implicit)||void 0===a?void 0:a.scopes)||{}),server:e.props.activeServer,id:o,form:e.props.form,formApi:e.props.formApi,clientId:t.flows.implicit["x-defaultClientId"]||t["x-defaultClientId"],flow:"implicit"});if("oauth2"===t.type&&t.flows&&t.flows.authorizationCode)return React.createElement(OAuth2Flow_1.OAuth2Flow,{key:o,authorizationUrl:t.flows.authorizationCode.authorizationUrl,tokenUrl:t.flows.authorizationCode.tokenUrl,authCorsProxyUrl:e.props.authCorsProxyUrl,scopes:Object.keys((null===(l=t.flows.authorizationCode)||void 0===l?void 0:l.scopes)||{}),server:e.props.activeServer,id:o,form:e.props.form,formApi:e.props.formApi,clientId:t.flows.authorizationCode["x-defaultClientId"]||t["x-defaultClientId"],flow:"authorizationCode"});if("oauth2"===t.type){var c=utils_1.fromStorage("auth."+o+".token");return c=c?JSON.parse(c):{},React.createElement(React.Fragment,{key:o},React.createElement(form_1.FormControl,null,React.createElement(form_1.FormLabel,null," Access Token Type: "),React.createElement(TextField_1.FormTextField,{fullWidth:!0,field:"auth."+o+".token.token_type",initialValue:c.token_type||"Bearer"})),React.createElement(form_1.FormControl,null,React.createElement(form_1.FormLabel,null," Access Token: "),React.createElement(TextField_1.FormTextField,{type:"password",fullWidth:!0,field:"auth."+o+".token.access_token",validate:requiredValidator,initialValue:c.access_token,validateOnBlur:!0,validateOnChange:!0})))}if("openIdConnect"===t.type)return React.createElement(OpenIDConnect_1.OpenIDConnect,{key:o,server:e.props.activeServer,authCorsProxyUrl:e.props.authCorsProxyUrl,id:o,form:e.props.form,formApi:e.props.formApi,scheme:t,clientId:t["x-defaultClientId"]})}}))),React.createElement("small",null,React.createElement("strong",null,"Note"),": Your credentials will be saved until the end of the browser session"))}}),t}(React.Component);exports.AuthPanel=AuthPanel;
//# sourceMappingURL=AuthPanel.js.map