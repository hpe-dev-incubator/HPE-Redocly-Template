import * as React from 'react';
import { SwaggerResponse } from './ResponsePanel';
import { ProStore } from '../../services';
import { OperationModel, Server } from '../../redoc-lib';
export interface ConsoleProps {
    store: ProStore;
    operation: OperationModel;
    specIdx?: number;
    className?: string;
    rootElement?: HTMLElement | null;
    onClose: () => any;
}
export interface ConsoleState {
    form: any;
    shaking: boolean;
    loading: boolean;
    activeTab: number;
    error?: Error & {
        response?: SwaggerResponse;
    };
    resolvedRawSpec?: any;
    response?: SwaggerResponse;
    time?: number;
    server: Server;
}
export declare class Console extends React.Component<ConsoleProps, ConsoleState> {
    formApi: any;
    constructor(props: any);
    setFormApi: (formApi: any) => void;
    handleChange: (formState: any) => void;
    handleTabChange: (idx: any) => void;
    handleServerChange: (server: any) => void;
    handleExecute: () => Promise<void>;
    componentDidMount(): Promise<void>;
    componentDidUpdate(prevProps: any): void;
    validateBody: () => undefined;
    render(): JSX.Element;
    renderRequest(): JSX.Element | "Loading...";
    renderResponse(): JSX.Element;
}
