import{__assign,__extends}from"tslib";import*as React from"react";import{Dropdown}from"../../redoc-lib";import{fromStorage,getSecurityDetailsOptions,toStorage}from"../../utils";import OAuth2TokenInput from"./OAuth2TokenInput";import{OAuth2Flow}from"./OAuth2Flow";import{OpenIDConnect}from"./OpenIDConnect";import{FormDropdown,FormTextField}from"../common/TextField";import{FormControl,FormLabel,FormWrapper}from"../common/form";import{l}from"../../redoc-lib/src/services/Labels";export function requiredValidator(e){if(!e)return"Field is required"}var getCookie=function(e){var t=document.cookie.match("\\b"+e+"=([^;]*)\\b");return t?t[1]:void 0};function fromCookie(e){if("cookie"===e.in)return getCookie(e.name)}var AuthPanel=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return Object.defineProperty(t,"state",{enumerable:!0,configurable:!0,writable:!0,value:{activeScheme:0}}),Object.defineProperty(t,"handleSchemeChange",{enumerable:!0,configurable:!0,writable:!0,value:function(e){t.setState({activeScheme:e.idx}),toStorage("securityRequirementName",e.value)}}),t}return __extends(t,e),Object.defineProperty(t,"getDerivedStateFromProps",{enumerable:!1,configurable:!0,writable:!0,value:function(e){var t=e.operation.security.map((function(e){return e.schemes.map((function(e){return e.id})).join(" and ")})),r=fromStorage("securityRequirementName"),o=t.findIndex((function(e){return e===r}));return{activeScheme:o<0?0:o}}}),Object.defineProperty(t.prototype,"render",{enumerable:!1,configurable:!0,writable:!0,value:function(){var e=this,t=this.state.activeScheme,r=this.props.operation.security,o=r.map((function(e){return e.schemes.map((function(e){return e.id})).join(" and ")})).map((function(e,t){return{value:e,idx:t}}));return 0===o.length?null:React.createElement(React.Fragment,null,React.createElement(FormWrapper,null,o.length>1&&React.createElement(FormControl,null,React.createElement(Dropdown,{variant:"dark",fullWidth:!0,prefix:"Security scheme: ",options:o,value:o[t].value,onChange:this.handleSchemeChange}))||null,r[t].schemes.map((function(t){var r,o,a,n=t.id;if("apiKey"===t.type){var i=getSecurityDetailsOptions(n,""),u={field:"auth."+n,fullWidth:!0,initialValue:fromCookie(t)||fromStorage("auth."+n),initValue:fromCookie(t)||fromStorage("auth."+n),validate:requiredValidator,validateOnBlur:!0,validateOnChange:!0};return React.createElement(FormControl,{key:n},React.createElement(FormLabel,null," ",t.name,": "),i?React.createElement(FormDropdown,__assign({},u,{options:i})):React.createElement(FormTextField,__assign({},u,{type:"password"})))}if("http"===t.type){if("basic"===t.scheme){var c=getSecurityDetailsOptions(n,"username");u={field:"auth."+n+".username",fullWidth:!0,initialValue:fromStorage("auth."+n+".username"),initValue:fromStorage("auth."+n+".username"),validate:requiredValidator,validateOnBlur:!0,validateOnChange:!0};return React.createElement(React.Fragment,{key:n},React.createElement(FormControl,null,React.createElement(FormLabel,null," ",l("tryItAuthBasicUsername"),": "),c?React.createElement(FormDropdown,__assign({},u,{options:c})):React.createElement(FormTextField,__assign({},u))),React.createElement(FormControl,null,React.createElement(FormLabel,null," ",l("tryItAuthBasicPassword"),": "),React.createElement(FormTextField,{type:"password",fullWidth:!0,field:"auth."+n+".password",validate:requiredValidator,initialValue:fromStorage("auth."+n+".password"),validateOnBlur:!0,validateOnChange:!0})))}if("bearer"===t.scheme){var m=getSecurityDetailsOptions(n,"");u={field:"auth."+n+".username",fullWidth:!0,initialValue:fromStorage("auth."+n),initValue:fromStorage("auth."+n),validate:requiredValidator,validateOnBlur:!0,validateOnChange:!0};return React.createElement(React.Fragment,{key:n},React.createElement(FormControl,null,React.createElement(FormLabel,null," Bearer Token: "),m?React.createElement(FormDropdown,__assign({},u,{options:m})):React.createElement(FormTextField,__assign({},u,{type:"password",placeholder:"(without 'Bearer')"}))))}}else{if("oauth2"===t.type&&t.flows&&t.flows.clientCredentials)return React.createElement(OAuth2TokenInput,{key:n,flow:t.flows.clientCredentials,server:e.props.activeServer,authCorsProxyUrl:e.props.authCorsProxyUrl,id:n,form:e.props.form,formApi:e.props.formApi,clientId:t.flows.clientCredentials["x-defaultClientId"]||t["x-defaultClientId"]});if("oauth2"===t.type&&t.flows&&t.flows.implicit)return React.createElement(OAuth2Flow,{key:n,authorizationUrl:t.flows.implicit.authorizationUrl,authCorsProxyUrl:e.props.authCorsProxyUrl,scopes:Object.keys((null===(o=null===(r=null==t?void 0:t.flows)||void 0===r?void 0:r.implicit)||void 0===o?void 0:o.scopes)||{}),server:e.props.activeServer,id:n,form:e.props.form,formApi:e.props.formApi,clientId:t.flows.implicit["x-defaultClientId"]||t["x-defaultClientId"],flow:"implicit"});if("oauth2"===t.type&&t.flows&&t.flows.authorizationCode)return React.createElement(OAuth2Flow,{key:n,authorizationUrl:t.flows.authorizationCode.authorizationUrl,tokenUrl:t.flows.authorizationCode.tokenUrl,authCorsProxyUrl:e.props.authCorsProxyUrl,scopes:Object.keys((null===(a=t.flows.authorizationCode)||void 0===a?void 0:a.scopes)||{}),server:e.props.activeServer,id:n,form:e.props.form,formApi:e.props.formApi,clientId:t.flows.authorizationCode["x-defaultClientId"]||t["x-defaultClientId"],flow:"authorizationCode"});if("oauth2"===t.type){var s=fromStorage("auth."+n+".token");return s=s?JSON.parse(s):{},React.createElement(React.Fragment,{key:n},React.createElement(FormControl,null,React.createElement(FormLabel,null," Access Token Type: "),React.createElement(FormTextField,{fullWidth:!0,field:"auth."+n+".token.token_type",initialValue:s.token_type||"Bearer"})),React.createElement(FormControl,null,React.createElement(FormLabel,null," Access Token: "),React.createElement(FormTextField,{type:"password",fullWidth:!0,field:"auth."+n+".token.access_token",validate:requiredValidator,initialValue:s.access_token,validateOnBlur:!0,validateOnChange:!0})))}if("openIdConnect"===t.type)return React.createElement(OpenIDConnect,{key:n,server:e.props.activeServer,authCorsProxyUrl:e.props.authCorsProxyUrl,id:n,form:e.props.form,formApi:e.props.formApi,scheme:t,clientId:t["x-defaultClientId"]})}}))),React.createElement("small",null,React.createElement("strong",null,"Note"),": Your credentials will be saved until the end of the browser session"))}}),t}(React.Component);export{AuthPanel};
//# sourceMappingURL=AuthPanel.js.map